{"ast":null,"code":"var _jsxFileName = \"/Users/lesliesage/Development/Projects/mappy-quizzes/map-quiz-frontend/src/containers/QuizContainer.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport City from \"../components/City.js\";\nimport Map from \"../components/Map.js\";\nimport Score from \"../components/Score.js\";\nimport APIKEY from \"../APIKEY.js\";\n\nclass QuizContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: [],\n      cityIndex: 0,\n      isMarkerShown: false,\n      yourChoice: null\n    };\n\n    this.toggleMarker = () => {\n      this.setState({\n        isMarkerShown: !this.state.isMarkerShown\n      });\n    };\n\n    this.setChoice = latlng => {\n      this.setState({\n        yourChoice: latlng\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/randomtwenty\").then(resp => resp.json()).then(cities => this.setState({\n      cities: cities\n    }));\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(City, {\n      currentCity: this.state.cities[this.state.cityIndex],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Map, {\n      currentCity: this.state.cities[this.state.cityIndex],\n      yourChoice: this.state.yourChoice,\n      setChoice: this.setChoice,\n      toggleMarker: this.toggleMarker,\n      isMarkerShown: this.state.isMarkerShown,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\".concat(APIKEY, \"&libraries=geometry\"),\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"800px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default QuizContainer;","map":{"version":3,"sources":["/Users/lesliesage/Development/Projects/mappy-quizzes/map-quiz-frontend/src/containers/QuizContainer.js"],"names":["React","Component","Fragment","Grid","City","Map","Score","APIKEY","QuizContainer","state","cities","cityIndex","isMarkerShown","yourChoice","toggleMarker","setState","setChoice","latlng","componentDidMount","fetch","then","resp","json","render","height"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport City from \"../components/City.js\";\nimport Map from \"../components/Map.js\";\nimport Score from \"../components/Score.js\";\nimport APIKEY from \"../APIKEY.js\";\n\nclass QuizContainer extends Component {\n  state = {\n    cities: [],\n    cityIndex: 0,\n    isMarkerShown: false,\n    yourChoice: null\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/randomtwenty\")\n      .then(resp => resp.json())\n      .then(cities => this.setState({ cities: cities }));\n  }\n\n  toggleMarker = () => {\n    this.setState({ isMarkerShown: !this.state.isMarkerShown });\n  };\n\n  setChoice = latlng => {\n    this.setState({ yourChoice: latlng });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <City currentCity={this.state.cities[this.state.cityIndex]} />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={13}>\n              <Map\n                currentCity={this.state.cities[this.state.cityIndex]}\n                yourChoice={this.state.yourChoice}\n                setChoice={this.setChoice}\n                toggleMarker={this.toggleMarker}\n                isMarkerShown={this.state.isMarkerShown}\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${APIKEY}&libraries=geometry`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `800px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              />\n            </Grid.Column>\n            <Grid.Column width={1}>\n              <Score />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Fragment>\n    );\n  }\n}\n\nexport default QuizContainer;\n"]},"metadata":{},"sourceType":"module"}