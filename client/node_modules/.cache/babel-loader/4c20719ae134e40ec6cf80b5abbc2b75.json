{"ast":null,"code":"var _jsxFileName = \"/Users/lesliesage/Development/Projects/mappy-quizzes/map-quiz-frontend/src/components/Map.js\";\nimport React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport MapOptions from \"../MapOptions.json\";\nconst google = window.google; // reminders for resources we can use to calculate distance between the click and city coordinates\n\nlet arr = [{\n  lat: 48.8667,\n  lng: 2.3333\n}, {\n  lat: 55.7522,\n  lng: 37.6155\n}, {\n  lat: -22.925,\n  lng: -43.225\n}]; // google.maps.geometry.spherical.computeDistanceBetween(LatLng1, myLatLng)\n\nconst createMarker = () => new window.google.maps.Marker({\n  position: {\n    lat: 43.642567,\n    lng: -79.387054\n  },\n  map: this.googleMap\n});\n\nlet markP = arr[0];\nlet i = 1;\n\nconst handleClick = e => {\n  console.log(e);\n  console.log(e.latLng);\n  markP = arr[i];\n  i += 1;\n}; // {myLatLng = new google.maps.LatLng({lat: -34, lng: 151})}\n\n\nconst Map = withScriptjs(withGoogleMap(props => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(GoogleMap, {\n  defaultZoom: 2.3,\n  defaultCenter: {\n    lat: 25,\n    lng: 0\n  },\n  defaultOptions: {\n    styles: MapOptions,\n    maxZoom: 7,\n    minZoom: 2.3,\n    gestureHandling: \"cooperative\"\n  },\n  onClick: handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Marker, {\n  position: markP,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), \" */}\"))));\nexport default Map;","map":{"version":3,"sources":["/Users/lesliesage/Development/Projects/mappy-quizzes/map-quiz-frontend/src/components/Map.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","MapOptions","google","window","arr","lat","lng","createMarker","maps","position","map","googleMap","markP","i","handleClick","e","console","log","latLng","Map","props","styles","maxZoom","minZoom","gestureHandling"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;AAMA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB,C,CACA;;AACA,IAAIE,GAAG,GAAG,CAAC;AAACC,EAAAA,GAAG,EAAE,OAAN;AAAeC,EAAAA,GAAG,EAAE;AAApB,CAAD,EAA8B;AAACD,EAAAA,GAAG,EAAE,OAAN;AAAeC,EAAAA,GAAG,EAAE;AAApB,CAA9B,EAA4D;AAACD,EAAAA,GAAG,EAAE,CAAC,MAAP;AAAeC,EAAAA,GAAG,EAAE,CAAC;AAArB,CAA5D,CAAV,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,MACjB,IAAIJ,MAAM,CAACD,MAAP,CAAcM,IAAd,CAAmBR,MAAvB,CAA8B;AAC5BS,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB,GADkB;AAE5BI,EAAAA,GAAG,EAAE,KAAKC;AAFkB,CAA9B,CADJ;;AAME,IAAIC,KAAK,GAAGR,GAAG,CAAC,CAAD,CAAf;AACA,IAAIS,CAAC,GAAG,CAAR;;AACF,MAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAN,EAAAA,KAAK,GAAGR,GAAG,CAACS,CAAD,CAAX;AACAA,EAAAA,CAAC,IAAI,CAAL;AACD,CALD,C,CAUA;;;AAEA,MAAMM,GAAG,GAAGtB,YAAY,CACtBC,aAAa,CAACsB,KAAK,IACjB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,oBAAC,SAAD;AACA,EAAA,WAAW,EAAE,GADb;AAEA,EAAA,aAAa,EAAE;AAAEf,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAFf;AAGA,EAAA,cAAc,EAAE;AACde,IAAAA,MAAM,EAAEpB,UADM;AAEdqB,IAAAA,OAAO,EAAE,CAFK;AAGdC,IAAAA,OAAO,EAAE,GAHK;AAIdC,IAAAA,eAAe,EAAE;AAJH,GAHhB;AASA,EAAA,OAAO,EAAEV,WATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWG,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXH,SAFF,CADW,CADS,CAAxB;AAsBA,eAAeO,GAAf","sourcesContent":["import React from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport MapOptions from \"../MapOptions.json\";\n\nconst google = window.google\n// reminders for resources we can use to calculate distance between the click and city coordinates\nlet arr = [{lat: 48.8667, lng: 2.3333}, {lat: 55.7522, lng: 37.6155}, {lat: -22.925, lng: -43.225}]\n\n// google.maps.geometry.spherical.computeDistanceBetween(LatLng1, myLatLng)\n\nconst createMarker = () =>\n    new window.google.maps.Marker({\n      position: { lat: 43.642567, lng: -79.387054 },\n      map: this.googleMap,\n    })\n\n  let markP = arr[0]\n  let i = 1\nconst handleClick = (e) => {\n  console.log(e)\n  console.log(e.latLng)\n  markP = arr[i]\n  i += 1\n}\n\n\n\n\n// {myLatLng = new google.maps.LatLng({lat: -34, lng: 151})}\n\nconst Map = withScriptjs(\n  withGoogleMap(props => (\n    <React.Fragment>\n      \n      <GoogleMap\n      defaultZoom={2.3}\n      defaultCenter={{ lat: 25, lng: 0 }}\n      defaultOptions={{\n        styles: MapOptions,\n        maxZoom: 7,\n        minZoom: 2.3,\n        gestureHandling: \"cooperative\"\n      }}\n      onClick={handleClick}\n      >\n        {<Marker position={markP} />} */}\n      </GoogleMap>\n    </React.Fragment>\n   \n  ))\n);\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}